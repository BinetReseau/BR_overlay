diff -Nur solidircd-stable.orig/include/fds.h solidircd-stable/include/fds.h
--- solidircd-stable.orig/include/fds.h	2009-09-25 13:56:59.000000000 +0200
+++ solidircd-stable/include/fds.h	2009-09-25 13:57:04.000000000 +0200
@@ -12,7 +12,7 @@
 struct fd_callbackp {
    void (*callback)(struct fd_callbackp *);
    void *param;
-   int fd;  /* fd number                */
+   long fd;  /* fd number                */
    int rdf; /* fd is set for reading    */
    int wrf; /* fd is set for writing    */
 };
@@ -29,17 +29,17 @@
 
 void init_fds();
 
-void add_fd(int fd, int type, void *value);
-void del_fd(int fd);
+void add_fd(long fd, int type, void *value);
+void del_fd(long fd);
 #define add_callback_fd(fds) add_fd((fds)->fd, FDT_CALLBACKP, (fds))
 #define del_callback_fd(fds) del_fd((fds)->fd)
 
-void get_fd_info(int fd, int *type, unsigned int *flags, void **value);
-void set_fd_flags(int fd, unsigned int flags);
-void unset_fd_flags(int fd, unsigned int flags);
+void get_fd_info(long fd, int *type, unsigned int *flags, void **value);
+void set_fd_flags(long fd, unsigned int flags);
+void unset_fd_flags(long fd, unsigned int flags);
 
-void set_fd_internal(int fd, void *ptr);
-void *get_fd_internal(int fd);
+void set_fd_internal(long fd, void *ptr);
+void *get_fd_internal(long fd);
 
 void check_client_fd(aClient *cptr);
 
diff -Nur solidircd-stable.orig/include/nameser.h solidircd-stable/include/nameser.h
--- solidircd-stable.orig/include/nameser.h	2009-09-25 13:56:59.000000000 +0200
+++ solidircd-stable/include/nameser.h	2009-09-25 13:57:04.000000000 +0200
@@ -162,7 +162,7 @@
 
 typedef struct
 {
-    u_short     id;		/* query identification number */
+    uint16_t     id;		/* query identification number */
 #if BYTE_ORDER == BIG_ENDIAN    
     
     /* fields in third byte */
@@ -202,10 +202,10 @@
 
     /* remaining bytes */
     
-    u_short     qdcount;		/* number of question entries */
-    u_short     ancount;		/* number of answer entries */
-    u_short     nscount;		/* number of authority entries */
-    u_short     arcount;		/* number of resource entries */
+    uint16_t     qdcount;		/* number of question entries */
+    uint16_t     ancount;		/* number of answer entries */
+    uint16_t     nscount;		/* number of authority entries */
+    uint16_t     arcount;		/* number of resource entries */
 } HEADER;
 
 /* Defines for handling compressed domain names */
@@ -222,18 +222,18 @@
 #ifdef	__alpha
     u_int       r_ttl;		/* time to live */
 #else
-    u_long      r_ttl;		/* time to live */
+    uint32_t      r_ttl;		/* time to live */
 #endif
     int         r_size;		/* size of data area */
     char       *r_data;		/* pointer to data */
 };
 
-extern u_short _getshort();
+extern uint16_t _getint16();
 
 #ifdef __alpha
-extern u_int _getlong();
+extern u_int _getint32();
 #else
-extern u_long _getlong();
+extern uint32_t _getint32();
 #endif
 
 /*
@@ -266,5 +266,5 @@
 	(cp)[2] = (l >>= 8); \
 	(cp)[1] = (l >>= 8); \
 	(cp)[0] = l >> 8; \
-	(cp) += sizeof(u_long); \
+	(cp) += sizeof(uint32_t); \
 }
diff -Nur solidircd-stable.orig/include/resolv.h solidircd-stable/include/resolv.h
--- solidircd-stable.orig/include/resolv.h	2009-09-25 13:56:59.000000000 +0200
+++ solidircd-stable/include/resolv.h	2009-09-25 13:57:04.000000000 +0200
@@ -79,7 +79,7 @@
 	char	unused[3];
 	struct {
 		struct in_addr	addr;
-		u_int32_t	mask;
+		uint32_t	mask;
 	} sort_list[MAXRESOLVSORT];
 };
 
diff -Nur solidircd-stable.orig/include/struct.h solidircd-stable/include/struct.h
--- solidircd-stable.orig/include/struct.h	2009-09-25 13:56:59.000000000 +0200
+++ solidircd-stable/include/struct.h	2009-09-25 13:57:04.000000000 +0200
@@ -1416,7 +1416,8 @@
 /* strncopynt --> strncpyzt to avoid confusion, sematics changed N must
  * be now the number of bytes in the array --msa */
 
-#define	strncpyzt(x, y, N) do{(void)strncpy(x,y,N);x[N-1]='\0';}while(0)
+//define	strncpyzt(x, y, N) do{(void)strncpy(x,y,N);x[N-1]='\0';}while(0)
+#define	strncpyzt(x, y, N)	do{(void)snprintf(x, N, "%s", y);}while(0)
 #define	StrEq(x,y)	(!strcmp((x),(y)))
 
 /* used in SetMode() in channel.c and m_umode() in s_msg.c */
diff -Nur solidircd-stable.orig/src/clientlist.c solidircd-stable/src/clientlist.c
--- solidircd-stable.orig/src/clientlist.c	2009-09-25 13:56:59.000000000 +0200
+++ solidircd-stable/src/clientlist.c	2009-09-25 13:57:04.000000000 +0200
@@ -70,7 +70,7 @@
       }
    }
 
-   sendto_realops("remove_from_list(%x, %x) failed!!", (int) list, (int) ptr);
+   sendto_realops("remove_from_list(%x, %x) failed!!", (long) list, (long) ptr);
 }
 
 u_long
diff -Nur solidircd-stable.orig/src/fds.c solidircd-stable/src/fds.c
--- solidircd-stable.orig/src/fds.c	2009-09-25 13:56:59.000000000 +0200
+++ solidircd-stable/src/fds.c	2009-09-25 13:57:04.000000000 +0200
@@ -16,9 +16,9 @@
 #include "numeric.h"
 #include "memcount.h"
 
-void engine_add_fd(int);
-void engine_del_fd(int);
-void engine_change_fd_state(int, unsigned int);
+void engine_add_fd(long);
+void engine_del_fd(long);
+void engine_change_fd_state(long, unsigned int);
 
 struct afd_entry {
    int type;
@@ -81,7 +81,7 @@
 
 void report_fds(aClient *cptr)
 {
-   int i;
+   long i;
    char *name, *blocking;
 
    for(i = 0; i < MAXCONNECTIONS; i++)
@@ -115,27 +115,27 @@
 }
 #endif
 
-static inline void fd_range_assert(int fd)
+static inline void fd_range_assert(long fd)
 {
    if(fd < 0 || fd >= MAXCONNECTIONS)
       abort();
 }
 
-static inline void fd_notused_assert(int fd)
+static inline void fd_notused_assert(long fd)
 {
    if(fd_list[fd].type != FDT_NONE)
       abort();
 }
 
-static inline void fd_used_assert(int fd)
+static inline void fd_used_assert(long fd)
 {
    if(fd_list[fd].type == FDT_NONE)
       abort();
 }
 
-void add_fd(int fd, int type, void *value)
+void add_fd(long fd, int type, void *value)
 {
-   fdfprintf(stderr, "add_fd: %d %d %x\n", fd, type, (int) value);
+   fdfprintf(stderr, "add_fd: %d %d %x\n", fd, type, (long) value);
 
    fd_range_assert(fd);
    fd_notused_assert(fd);
@@ -146,7 +146,7 @@
    engine_add_fd(fd);
 }
 
-void del_fd(int fd)
+void del_fd(long fd)
 {
    fdfprintf(stderr, "del_fd: %d\n", fd);
 
@@ -160,7 +160,7 @@
    fd_list[fd].internal = NULL;
 }
 
-void set_fd_flags(int fd, unsigned int flags)
+void set_fd_flags(long fd, unsigned int flags)
 {
    int oldflags;
    fd_range_assert(fd);
@@ -176,7 +176,7 @@
       engine_change_fd_state(fd, fd_list[fd].flags);
 }
 
-void unset_fd_flags(int fd, unsigned int flags)
+void unset_fd_flags(long fd, unsigned int flags)
 {
    int oldflags;
    fd_range_assert(fd);
@@ -191,7 +191,7 @@
       engine_change_fd_state(fd, fd_list[fd].flags);
 }
 
-void get_fd_info(int fd, int *type, unsigned int *flags, void **value)
+void get_fd_info(long fd, int *type, unsigned int *flags, void **value)
 {
    fd_range_assert(fd);
 
@@ -200,7 +200,7 @@
    *value = fd_list[fd].value;
 }
 
-unsigned int get_fd_flags(int fd)
+unsigned int get_fd_flags(long fd)
 {
    fd_range_assert(fd);
    fd_used_assert(fd);
@@ -213,12 +213,12 @@
    memset(fd_list, 0, sizeof(struct afd_entry) * MAXCONNECTIONS);
 }
 
-void set_fd_internal(int fd, void *ptr)
+void set_fd_internal(long fd, void *ptr)
 {
    fd_list[fd].internal = ptr;
 }
 
-void *get_fd_internal(int fd)
+void *get_fd_internal(long fd)
 {
    return fd_list[fd].internal;
 }
diff -Nur solidircd-stable.orig/src/inet_addr.c solidircd-stable/src/inet_addr.c
--- solidircd-stable.orig/src/inet_addr.c	2009-09-25 13:56:59.000000000 +0200
+++ solidircd-stable/src/inet_addr.c	2009-09-25 13:57:04.000000000 +0200
@@ -57,7 +57,7 @@
 #include "sys.h"
 #include <netinet/in.h>
 #include "nameser.h"
-#include "resolv.h"
+#include <resolv.h>
 
 #ifndef	INADDR_NONE
 #define	INADDR_NONE	((u_long)0xffffffff)
diff -Nur solidircd-stable.orig/src/ircd.c solidircd-stable/src/ircd.c
--- solidircd-stable.orig/src/ircd.c	2009-09-25 13:56:59.000000000 +0200
+++ solidircd-stable/src/ircd.c	2009-09-25 13:57:04.000000000 +0200
@@ -234,8 +234,8 @@
     was_here = YES;
         
 #ifdef  USE_SYSLOG
-    (void) syslog(LOG_WARNING, "Restarting Server because: %s, sbrk(0)-etext: %d",
-                  mesg, (u_int) sbrk((size_t) 0) - (u_int) sbrk0);
+    (void) syslog(LOG_WARNING, "Restarting Server because: %s, sbrk(0)-etext: %lu",
+                  mesg, (u_long) sbrk((size_t) 0) - (u_long) sbrk0);
 #endif
     server_reboot();
 }
@@ -259,7 +259,7 @@
 {
     int     i;
     sendto_ops("Aieeeee!!!  Restarting server... sbrk(0)-etext: %d",
-               (u_int) sbrk((size_t) 0) - (u_int) sbrk0);
+               (u_long) sbrk((size_t) 0) - (u_long) sbrk0);
         
     Debug((DEBUG_NOTICE, "Restarting server..."));
     dump_connections(me.fd);
diff -Nur solidircd-stable.orig/src/ircsprintf.c solidircd-stable/src/ircsprintf.c
--- solidircd-stable.orig/src/ircsprintf.c	2009-09-25 13:56:59.000000000 +0200
+++ solidircd-stable/src/ircsprintf.c	2009-09-25 15:46:28.000000000 +0200
@@ -12,199 +12,18 @@
 inline int irc_printf(char *str, const char *pattern, va_list vl) 
 #endif
 {
-    char *s;
-    char *buf=str;
-    const char *format=pattern;
-    unsigned long i, u;
-    int len=0;
-    va_list ap;
-    VA_COPY(ap, vl);
-
 #ifdef WANT_SNPRINTF
-    if(!size) 
-    {
-#endif
-	while(*format)
+	if(!size)
 	{
-	    u = 0;
-	    switch(*format)
-	    {
-	    case '%':
-		format++;
-		switch(*format)
-		{
-		case 's': /* most popular ;) */
-		    s=va_arg(ap, char *);
-		    while(*s)
-			buf[len++]=*s++;
-		    format++;
-		    break;
-		case 'u':
-		    format--; /* falls through and is caught below */
-		case 'l':
-		    if (*(format+1) == 'u')
-		    {
-			u=1;
-			format++;
-		    }
-		    else if (*(format+1) == 'd')
-		    {
-			u=0;
-			format++;
-		    }
-		    else
-			u=0;
-		    /* fallthrough */
-		case 'd':
-		case 'i':
-		    i=va_arg(ap, unsigned long);
-		    if(!u)
-			if(i&0x80000000)
-			{
-			    buf[len++]='-'; /* it's negative.. */
-			    i = 0x80000000 - (i & ~0x80000000);
-			}
-		    s=&num[11];
-		    do
-		    {
-			*--s=itoa_tab[i%10];
-			i/=10;
-		    } while(i!=0);
-		    while(*s)
-			buf[len++]=*s++;
-		    format++;
-		    break;
-		case 'n':
-		    /* oo, sneaky...it really is just a long, though! */
-		case 'x':
-		case 'X':
-		    i=va_arg(ap, long);
-		    buf[len++]='0';
-		    buf[len++]='x';
-		    s=&num[11];
-		    do
-		    {
-			*--s=xtoa_tab[i%16];
-			i/=16;
-		    } while(i!=0);
-		    while(*s)
-			buf[len++]=*s++;
-		    format++;
-		    break;
-		case 'c':
-		    buf[len++]= (char) va_arg(ap, int);
-		    format++;
-		    break;
-		default:
-		    /* yick, unknown type...default to returning what our 
-		       s[n]printf friend would */
-		    return vsprintf(str, pattern, vl);
-		    break;
-		}
-		break;
-	    default:
-		buf[len++]=*format++;
-		break;
-	    }
-	}
-	buf[len]=0;
-	return len;
+#endif
+		return vsprintf(str, pattern, vl);
 #ifdef WANT_SNPRINTF
-    }
-    else
-    {
-	while(*format && len<size)
+	}
+	else
 	{
-	    u = 0;
-	    switch(*format)
-	    {
-	    case '%':
-		format++;
-		switch(*format)
-		{
-		case 's': /* most popular ;) */
-		    s=va_arg(ap, char *);
-		    if(s==NULL)
-			s=nullstring;
-		    while(*s && len<size)
-			buf[len++]=*s++;
-		    format++;
-		    break;
-		case 'u':
-		    format--; /* now fall through and it's caught, cool */
-		case 'l':
-		    if (*(format+1) == 'u')
-		    {
-			u=1;
-			format++;
-		    }
-		    else if (*(format+1) == 'd')
-		    {
-			u=0;
-			format++;
-		    }
-		    else
-			u=0;
-		    /* fallthrough */
-		case 'd':
-		case 'i':
-		    i=va_arg(ap, unsigned long);
-		    if(!u)
-			if(i&0x80000000)
-			{
-			    buf[len++]='-'; /* it's negative.. */
-			    i = 0x80000000 - (i & ~0x80000000);
-			}
-		    s=&num[11];
-		    do
-		    {
-			*--s=itoa_tab[i%10];
-			i/=10;
-		    } while(i!=0);
-		    while(*s && len<size)
-			buf[len++]=*s++;
-		    format++;
-		    break;
-		case 'n':
-		    /* oo, sneaky...it really is just a long, though! */
-		case 'x':
-		case 'X':
-		    i=va_arg(ap, long);
-		    buf[len++]='0';
-		    if(len<size)
-			buf[len++]='x';
-		    else 
-			break;
-		    s=&num[11];
-		    do
-		    {
-			*--s=xtoa_tab[i%16];
-			i/=16;
-		    } while(i!=0);
-		    while(*s && len<size)
-			buf[len++]=*s++;
-		    format++;
-		    break;
-		case 'c':
-		    buf[len++]= (char) va_arg(ap, int);
-		    format++;
-		    break;
-		default:
-		    /* yick, unknown type...default to returning what our 
-		       s[n]printf friend would */
-		    return vsnprintf(str, size, pattern, vl);
-		    break;
-		}
-		break;
-	    default:
-		buf[len++]=*format++;
-		break;
-	    }
+		return vsnprintf(str, size, pattern, vl);
 	}
-	buf[len]=0;
-	return len;
-    }
-#endif /* WANT_SNPRINTF */
+#endif
 }
 
 int ircsprintf(char *str, const char *format, ...)
Files solidircd-stable.orig/src/.ircsprintf.c.swp and solidircd-stable/src/.ircsprintf.c.swp differ
diff -Nur solidircd-stable.orig/src/memcount.c solidircd-stable/src/memcount.c
--- solidircd-stable.orig/src/memcount.c	2009-09-25 13:56:59.000000000 +0200
+++ solidircd-stable/src/memcount.c	2009-09-25 13:57:04.000000000 +0200
@@ -1437,6 +1437,6 @@
 #endif  /* MEMTRACE */
 
     sendto_one(cptr, "%ssbrk(0)-etext: %u", pfxbuf,
-               (u_int) sbrk((size_t) 0) - (u_int) sbrk0);    
+               (u_long) sbrk((size_t) 0) - (u_long) sbrk0);    
 }
 
diff -Nur solidircd-stable.orig/src/modules.c solidircd-stable/src/modules.c
--- solidircd-stable.orig/src/modules.c	2009-09-25 13:56:59.000000000 +0200
+++ solidircd-stable/src/modules.c	2009-09-25 13:57:04.000000000 +0200
@@ -603,7 +603,7 @@
         {
             sendto_realops_lev(DEBUG_LEV, "Module cleanup: removing hook [%s]"
                             " for opaque %d", get_texthooktype(hk->hooktype), 
-                            (int) owner);
+                            (long) owner);
 
             hooklist = get_hooklist((enum c_hooktype) hk->hooktype);
 
@@ -624,7 +624,7 @@
     if(!(owner = find_module_opaque(opaque)))
     {
         sendto_realops_lev(DEBUG_LEV, "Module tried to add hooktype %d with"
-                         " unknown opaque 0x%x", (int) hooktype, (int) opaque);
+                         " unknown opaque 0x%x", (int) hooktype, (long) opaque);
         return NULL;
     }
 
diff -Nur solidircd-stable.orig/src/m_server.c solidircd-stable/src/m_server.c
--- solidircd-stable.orig/src/m_server.c	2009-09-25 13:56:59.000000000 +0200
+++ solidircd-stable/src/m_server.c	2009-09-25 15:11:25.000000000 +0200
@@ -52,11 +52,13 @@
             ubuf[1] = '\0';
         }
 
-        sendto_one(cptr, "NICK %s %d %ld %s %s %s %s %lu %lu :%s",
+		// Force cast to uint32_t ; otherwise, potential problems on 64bits systems
+		uint32_t sent_ip = (uint32_t) htonl( (uint32_t) acptr->ip.s_addr);
+        sendto_one(cptr, "NICK %s %d %ld %s %s %s %s %lu %u :%s",
                        acptr->name, acptr->hopcount + 1, acptr->tsinfo, ubuf,
                        acptr->user->username, MyConnect(acptr) ? acptr->sockhost : acptr->user->realhost,
                        acptr->user->server, acptr->user->servicestamp,
-                       htonl(acptr->ip.s_addr), acptr->info);
+                       sent_ip, acptr->info);
 
         if (IsUmodev(acptr))
             sendto_one(cptr, "SVHOST %s %s",
diff -Nur solidircd-stable.orig/src/res.c solidircd-stable/src/res.c
--- solidircd-stable.orig/src/res.c	2009-09-25 13:56:59.000000000 +0200
+++ solidircd-stable/src/res.c	2009-09-25 13:57:04.000000000 +0200
@@ -20,7 +20,7 @@
 #include <sys/time.h>
 #include <sys/socket.h>
 #include "nameser.h"
-#include "resolv.h"
+#include <resolv.h>
 #include "inet.h"
 
 /* ALLOW_CACHE_NAMES
@@ -691,6 +691,27 @@
 static char dhostbuf[HOSTLEN + 1];
 #endif
 
+/* helper functions, copied from src/res_comp.c*/
+uint16_t _getint16(char *msgp) {
+    char *p = (char *) msgp;
+	uint16_t u;
+    u = *p++ << 8;
+    return ((uint16_t) (u | *p));
+}
+
+uint32_t _getint32(char *msgp) {
+    char *p = (char *) msgp;
+    uint32_t u;
+
+    u = *p++;
+    u <<= 8;
+    u |= *p++;
+    u <<= 8;
+    u |= *p++;
+    u <<= 8;
+    return (u | *p);
+}
+
 /* process name server reply. */
 static int proc_answer(ResRQ * rptr, HEADER *hptr, char *buf, char *eob)
 {
@@ -737,10 +758,10 @@
 
 	hostbuf[HOSTLEN] = '\0';
 	cp += n;
-	type = (int) _getshort(cp);
-	cp += sizeof(short);
-	class = (int) _getshort(cp);
-	cp += sizeof(short);
+	type = (int) _getint16(cp);
+	cp += sizeof(uint16_t);
+	class = (int) _getint16(cp);
+	cp += sizeof(uint16_t);
 	if(class != C_IN)
 	{
 	    sendto_realops_lev(DEBUG_LEV,
@@ -767,8 +788,8 @@
 	    
 	    ipp = (u_char *) &rptr->addr.s_addr;
 	    ircsprintf(tmphost, "%u.%u.%u.%u.in-addr.arpa",
-		       (u_int) (ipp[3]), (u_int) (ipp[2]),
-		       (u_int) (ipp[1]), (u_int) (ipp[0]));  
+		       (uint32_t) (ipp[3]), (uint32_t) (ipp[2]),
+		       (uint32_t) (ipp[1]), (uint32_t) (ipp[0]));  
 	}
 	else
 	{
@@ -800,16 +821,16 @@
 	if (n <= 0)
 	    break;
 	cp += n;
-	type = (int) _getshort(cp);
-	cp += sizeof(short);
+	type = (int) _getint16(cp);
+	cp += sizeof(uint16_t);
 	
-	class = (int) _getshort(cp);
-	cp += sizeof(short);
+	class = (int) _getint16(cp);
+	cp += sizeof(uint16_t);
 	
-	rptr->ttl = _getlong(cp);
-	cp += sizeof(rptr->ttl);
-	dlen = (int) _getshort(cp);
-	cp += sizeof(short);
+	rptr->ttl = _getint32(cp);
+	cp += sizeof(uint32_t);
+	dlen = (int) _getint16(cp);
+	cp += sizeof(uint16_t);
 	
 	/* Wait to set rptr->type until we verify this structure */
 
@@ -1439,7 +1460,7 @@
 
 static unsigned int hash_cp(char *cp)
 {
-   return ((unsigned int) cp) % ARES_IDCACSIZE;
+   return (unsigned int) (((unsigned long) cp) % ARES_IDCACSIZE);
 }
 
 /* Add a new cache item to the queue and hash table. */
diff -Nur solidircd-stable.orig/src/res_comp.c solidircd-stable/src/res_comp.c
--- solidircd-stable.orig/src/res_comp.c	2009-09-25 13:56:59.000000000 +0200
+++ solidircd-stable/src/res_comp.c	2009-09-25 13:57:04.000000000 +0200
@@ -20,7 +20,7 @@
 
 /* $Id: res_comp.c,v 1.1.1.1 2005/06/27 03:02:32 sheik Exp $ */
 
-#include <sys/types.h>
+#include <stdint.h>
 #include <stdio.h>
 #include "nameser.h"
 
@@ -285,25 +285,25 @@
  * used by sendmail.
  */
 
-u_short _getshort(u_char *msgp)
+uint16_t _getint16(u_char *msgp)
 {
     u_char *p = (u_char *) msgp;
 
 #ifdef vax
     /* vax compiler doesn't put shorts in registers */
-    u_long u;
+    uint32_t u;
 #else
-    u_short u;
+    uint16_t u;
 #endif
 
     u = *p++ << 8;
-    return ((u_short) (u | *p));
+    return ((uint16_t) (u | *p));
 }
 
-u_long _getlong(u_char *msgp)
+uint32_t _getint32(u_char *msgp)
 {
     u_char *p = (u_char *) msgp;
-    u_long u;
+    uint32_t u;
 
     u = *p++;
     u <<= 8;
@@ -314,14 +314,14 @@
     return (u | *p);
 }
 
-int putshort(u_short s, u_char *msgp)
+int putint16(uint16_t s, u_char *msgp)
 {
 
     msgp[1] = s;
     msgp[0] = s >> 8;
 }
 
-int putlong(u_long l, u_char *msgp)
+int putint32(uint32_t l, u_char *msgp)
 {
     msgp[3] = l;
     msgp[2] = (l >>= 8);
diff -Nur solidircd-stable.orig/src/res_init.c solidircd-stable/src/res_init.c
--- solidircd-stable.orig/src/res_init.c	2009-09-25 13:56:59.000000000 +0200
+++ solidircd-stable/src/res_init.c	2009-09-25 13:57:04.000000000 +0200
@@ -144,7 +144,7 @@
 		if ((*cp == '\0') || (*cp == '\n'))
 		    continue;
 		if ((_res.nsaddr_list[nserv].sin_addr.s_addr =
-		     inet_addr(cp)) == (unsigned) -1)
+		     inet_addr(cp)) == INADDR_NONE)
 		{
 		    _res.nsaddr_list[nserv].sin_addr.s_addr
 			= INADDR_ANY;
diff -Nur solidircd-stable.orig/src/res_mkquery.c solidircd-stable/src/res_mkquery.c
--- solidircd-stable.orig/src/res_mkquery.c	2009-09-25 13:56:59.000000000 +0200
+++ solidircd-stable/src/res_mkquery.c	2009-09-25 13:57:04.000000000 +0200
@@ -21,7 +21,7 @@
 /* $Id: res_mkquery.c,v 1.1.1.1 2005/06/27 03:02:37 sheik Exp $ */
 
 #include <stdio.h>
-#include <sys/types.h>
+#include <stdint.h>
 #include <netinet/in.h>
 #include "config.h"
 #include "sys.h"
@@ -69,11 +69,11 @@
 	    return (-1);
 	cp += n;
 	buflen -= n;
-	putshort(type, cp);
-	cp += sizeof(u_short);
+	putint16(type, cp);
+	cp += sizeof(uint16_t);
 	
-	putshort(class, cp);
-	cp += sizeof(u_short);
+	putint16(class, cp);
+	cp += sizeof(uint16_t);
 
 	hp->qdcount = htons(1);
 	if (op == QUERY || data == NULL)
@@ -84,17 +84,17 @@
 	    return (-1);
 	cp += n;
 	buflen -= n;
-	putshort(T_NULL, cp);
-	cp += sizeof(u_short);
+	putint16(T_NULL, cp);
+	cp += sizeof(uint16_t);
 	
-	putshort(class, cp);
-	cp += sizeof(u_short);
+	putint16(class, cp);
+	cp += sizeof(uint16_t);
 
-	putlong(0, cp);
-	cp += sizeof(u_long);
+	putint32(0, cp);
+	cp += sizeof(uint32_t);
 
-	putshort(0, cp);
-	cp += sizeof(u_short);
+	putint16(0, cp);
+	cp += sizeof(uint16_t);
 
 	hp->arcount = htons(1);
 	break;
@@ -104,17 +104,17 @@
 	if (buflen < 1 + RRFIXEDSZ + datalen)
 	    return (-1);
 	*cp++ = '\0';		/* no domain name */
-	putshort(type, cp);
-	cp += sizeof(u_short);
+	putint16(type, cp);
+	cp += sizeof(uint16_t);
 	
-	putshort(class, cp);
-	cp += sizeof(u_short);
+	putint16(class, cp);
+	cp += sizeof(uint16_t);
 
-	putlong(0, cp);
-	cp += sizeof(u_long);
+	putint32(0, cp);
+	cp += sizeof(uint32_t);
 
-	putshort(datalen, cp);
-	cp += sizeof(u_short);
+	putint16(datalen, cp);
+	cp += sizeof(uint16_t);
 
 	if (datalen)
 	{
@@ -145,17 +145,17 @@
 	if ((n = dn_comp(dname, cp, buflen, dnptrs, lastdnptr)) < 0)
 	    return (-1);
 	cp += n;
-	putshort(type, cp);
-	cp += sizeof(u_short);
+	putint16(type, cp);
+	cp += sizeof(uint16_t);
 
-	putshort(class, cp);
-	cp += sizeof(u_short);
+	putint16(class, cp);
+	cp += sizeof(uint16_t);
 
-	putlong(0, cp);
-	cp += sizeof(u_long);
+	putint32(0, cp);
+	cp += sizeof(uint32_t);
 
-	putshort(datalen, cp);
-	cp += sizeof(u_short);
+	putint16(datalen, cp);
+	cp += sizeof(uint16_t);
 
 	if (datalen)
 	{
@@ -174,17 +174,17 @@
 	if ((n = dn_comp(dname, cp, buflen, dnptrs, lastdnptr)) < 0)
 	    return (-1);
 	cp += n;
-	putshort(newrr->r_type, cp);
-	cp += sizeof(u_short);
+	putint16(newrr->r_type, cp);
+	cp += sizeof(uint16_t);
 
-	putshort(newrr->r_class, cp);
-	cp += sizeof(u_short);
+	putint16(newrr->r_class, cp);
+	cp += sizeof(uint16_t);
 
-	putlong(0, cp);
-	cp += sizeof(u_long);
+	putint32(0, cp);
+	cp += sizeof(uint32_t);
 
-	putshort(newrr->r_size, cp);
-	cp += sizeof(u_short);
+	putint16(newrr->r_size, cp);
+	cp += sizeof(uint16_t);
 
 	if (newrr->r_size)
 	{
diff -Nur solidircd-stable.orig/src/s_bsd.c solidircd-stable/src/s_bsd.c
--- solidircd-stable.orig/src/s_bsd.c	2009-09-25 13:56:59.000000000 +0200
+++ solidircd-stable/src/s_bsd.c	2009-09-25 13:57:04.000000000 +0200
@@ -52,7 +52,7 @@
 #else
 #include "nameser.h"
 #endif
-#include "resolv.h"
+#include <resolv.h>
 #include "memcount.h"
 
 /* If FD_ZERO isn't define up to this point,
diff -Nur solidircd-stable.orig/src/socketengine_poll.c solidircd-stable/src/socketengine_poll.c
--- solidircd-stable.orig/src/socketengine_poll.c	2009-09-25 13:56:59.000000000 +0200
+++ solidircd-stable/src/socketengine_poll.c	2009-09-25 13:57:04.000000000 +0200
@@ -17,13 +17,13 @@
 #include <sys/poll.h>
 
 struct pollfd poll_fds[MAXCONNECTIONS];
-int last_pfd = -1;
+long last_pfd = -1;
 
 void engine_init()
 {
 }
 
-void engine_add_fd(int fd)
+void engine_add_fd(long fd)
 {
    struct pollfd *pfd = &poll_fds[++last_pfd];
 
@@ -38,9 +38,9 @@
    pfd->revents = 0;
 }
 
-void engine_del_fd(int fd)
+void engine_del_fd(long fd)
 {
-   int arrayidx = (int) get_fd_internal(fd);
+   long arrayidx = (long) get_fd_internal(fd);
 
    /* If it's at the end of the array, just chop it off */
    if(arrayidx == last_pfd)
@@ -58,9 +58,9 @@
    set_fd_internal(poll_fds[arrayidx].fd, (void *) arrayidx);
 }
 
-void engine_change_fd_state(int fd, unsigned int stateplus)
+void engine_change_fd_state(long fd, unsigned int stateplus)
 {
-   int arrayidx = (int) get_fd_internal(fd);
+   long arrayidx = (long) get_fd_internal(fd);
    struct pollfd *pfd = &poll_fds[arrayidx];
 
    pfd->events = 0;
@@ -70,7 +70,7 @@
       pfd->events |= POLLOUT;
 }
 
-void engine_get_pollfds(struct pollfd **pfds, int *numpfds)
+void engine_get_pollfds(struct pollfd **pfds, long *numpfds)
 {
    *pfds = poll_fds;
    *numpfds = (last_pfd + 1);
@@ -81,7 +81,8 @@
    static struct pollfd poll_fdarray[MAXCONNECTIONS];
 
    struct pollfd *pfd;
-   int nfds, nbr_pfds, length, i;
+   long nfds, nbr_pfds;
+   int length, i;
    unsigned int fdflags;
    int fdtype;
    void *fdvalue;
diff -Nur solidircd-stable.orig/src/s_serv.c solidircd-stable/src/s_serv.c
--- solidircd-stable.orig/src/s_serv.c	2009-09-25 13:56:59.000000000 +0200
+++ solidircd-stable/src/s_serv.c	2009-09-25 13:57:04.000000000 +0200
@@ -30,7 +30,7 @@
 #include "msg.h"
 #include "channel.h"
 #include "nameser.h"
-#include "resolv.h"
+#include <resolv.h>
 #include "dh.h"
 #include "zlink.h"
 #include "userban.h"
diff -Nur solidircd-stable.orig/src/s_user.c solidircd-stable/src/s_user.c
--- solidircd-stable.orig/src/s_user.c	2009-09-25 13:56:59.000000000 +0200
+++ solidircd-stable/src/s_user.c	2009-09-25 14:26:40.000000000 +0200
@@ -1253,11 +1253,14 @@
         ubuf[1] = '\0';
     }
     hash_check_watch(sptr, RPL_LOGON);
-    sendto_serv_butone(cptr, "NICK %s %d %ld %s %s %s %s %lu %lu :%s",
+
+	// Force cast to uint32_t ; otherwise, potential problems on 64bits systems
+	uint32_t sent_ip = (uint32_t) htonl( (uint32_t) sptr->ip.s_addr);
+    sendto_serv_butone(cptr, "NICK %s %d %ld %s %s %s %s %lu %u :%s",
                                nick, sptr->hopcount + 1, sptr->tsinfo, ubuf,
                                user->username, user->host, user->server, 
                                sptr->user->servicestamp,
-                               htonl(sptr->ip.s_addr), sptr->info);
+                               sent_ip, sptr->info);
    
     if(MyClient(sptr))
     {
