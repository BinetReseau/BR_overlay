/* $XORP: xorp/rtrmgr/config.boot.sample,v 1.46 2007/03/12 10:16:05 atanu Exp $ */


interfaces {
    restore-original-config-on-shutdown: false
    interface dc0 {
	description: "data interface"
	disable: false
	/* default-system-config */
	vif dc0 {
	    disable: false
	    address 10.10.10.10 {
		prefix-length: 24
		broadcast: 10.10.10.255
		disable: false
	    }
/*
	    address 10:10:10:10:10:10:10:10 {
		prefix-length: 64
		disable: false
	    }
*/
/*
	    address fe80::1 {
		prefix-length: 64
		disable: false
	    }
*/
	}
    }
    interface tun0 {
	description: "tunnel interface"
	disable: false
	/* default-system-config */
	vif tun0 {
	    disable: false
	    address 10.10.10.11 {
		prefix-length: 32
		destination: 10.20.20.20
		disable: false
	    }
	}
    }

    interface discard0 {
	description: "discard interface"
	disable: false
	discard: true
	vif discard0 {
	    disable: false
	    address 192.0.2.1 {
		prefix-length: 32
		disable: false
	    }
	}
    }
}

fea {
    unicast-forwarding4 {
	disable: false
	forwarding-entries {
	    retain-on-startup: false
	    retain-on-shutdown:	false
	}
    }
/*
    unicast-forwarding6 {
	disable: false
	forwarding-entries {
	    retain-on-startup: false
	    retain-on-shutdown:	false
	}
    }
*/

    click {
	/*
	 * The Click forwarding path.
	 * http://www.read.cs.ucla.edu/click/
	 */
	disable: false

	/*
	 * Set duplicate-routes-to-kernel to true if the XORP routes
	 * added to Click should be added to the system kernel as well.
	 */
	duplicate-routes-to-kernel: false

	/*
	 * Note: If both kernel-click and user-click are enabled, then
	 * typically kernel-click-config-generator-file and
	 * user-click-config-generator-file should point to different
	 * generators. Otherwise, a single common generator
	 * wouldn't know whether to generate configuration for kernel-level
	 * Click or for user-level Click.
	 */
	kernel-click {
	    disable: true
	    install-on-startup:	true
	    kernel-click-modules: "/path/to/proclikefs.o:/path/to/click.o"
	    /* XXX: On FreeBSD we need only module click.ko */
	    /* kernel-click-modules: "/path/to/click.ko" */
	    mount-directory: "/click"
	    kernel-click-config-generator-file: "/usr/local/xorp/fea/xorp_fea_click_config_generator"
	}

	user-click {
	    disable: false
	    command-file: "/usr/local/bin/click"
	    /*
	     * Note: don't add "-p <port>" as an extra argument, because it
	     * will be in conflict with the FEA's addition of the same
	     * argument.
	     */
	    command-extra-arguments: "-R"
	    command-execute-on-startup: true
	    control-address: 127.0.0.1
	    control-socket-port: 13000
	    startup-config-file: "/dev/null"
	    user-click-config-generator-file: "/usr/local/xorp/fea/xorp_fea_click_config_generator"
	}
    }
}

protocols {
    static {
	route 10.20.0.0/16 {
	    next-hop: 10.10.10.20
	    metric: 1
/*
	    qualified-next-hop 172.17.0.2 {
		metric: 10
	    }
*/
	}
	mrib-route 10.20.0.0/16 {
	    next-hop: 10.10.10.30
	    metric: 1
	}
/*
	route 20:20:20:20::/64 {
	    next-hop: 10:10:10:10:10:10:10:20
	    metric: 1
	}
	mrib-route 20:20:20:20::/64 {
	    next-hop: 10:10:10:10:10:10:10:30
	    metric: 1
	}
*/
    }
}

policy {
    /* Describe connected routes for redistribution */
    policy-statement connected {
	term export {
	    from {
		protocol: "connected"
	    }
	}
    }
}

policy {
    /* Describe static routes for redistribution */
    policy-statement static {
	term export {
	    from {
		protocol: "static"
	    }
	}
    }
}

protocols {
    rip {

/* Connected interfaces will only be advertised if explicitly exported */
	export: "connected"

/* Run on specified network interface addresses */
	interface dc0 {
	    vif dc0 {
		address 10.10.10.10 {
		    disable: false
/*
		    authentication {
			simple-password: "password";
			md5 @: u32 {
			    password: "password";
			    start-time: "2006-01-01.12:00"
			    end-time: "2007-01-01.12:00"
			}
		    }
*/
		}
	    }
	}
    }
}

protocols {
    ospf4 {
	router-id: 10.10.10.10

	/* export: "static" */

/*
	traceoptions {
	    flag {
		all {
		    disable: false
		}
	    }
	}
*/
	
	area 0.0.0.0 {

/*
	    virtual-link 20.20.20.20 {
		transit-area: 0.0.0.1
	    }
*/

/*
	    area-range: 10.0.0.0/8 {
		advertise: true
	    }
*/

	    interface dco0 {
		/* link-type: "broadcast" */
		vif dc0 {
		    address 10.10.10.10 {
			/* priority: 128 */
			/* hello-interval: 10 */
			/* router-dead-interval: 40 */
			/* interface-cost: 1 */
			/* retransmit-interval: 5 */
			/* transit-delay: 1 */

/*
			authentication {
			    simple-password: "password";

			    md5 @: u32 {
				password: "password";
				start-time: "2006-01-01.12:00"
				end-time: "2007-01-01.12:00"
				max-time-drift: 3600
			    }
			}
*/

			/* passive: false */

			/* disable: false */			

		    }
		}
	    }
	}

	area 0.0.0.1 {
	    /* area-type: "normal" */	

	    interface dc1 {
		vif dc1 {
		    address 10.10.11.10 {
		    }
		}
	    }
	}

/*
	area 0.0.0.2 {
	    area-type: "stub"

	    default-lsa {
		metric: 0
	    }

	    summaries {
		disable: false
	    }
	
	    interface dc2 {
		vif dc2 {
		    address 10.10.12.10 {
		    }
		}
	    }
	}
*/

/*
	area 0.0.0.3 {
	    area-type: "nssa"

	    default-lsa {
		metric: 0
	    }

	    summaries {
		disable: true
	    }
	
	    interface dc3 {
		vif dc3 {
		    address 10.10.13.10 {
		    }
		}
	    }
	}
*/

    }
}

protocols {
    ospf6 0 {	/* Instance ID */
	router-id: 10.10.10.10

	/* export: "static" */

/*
	traceoptions {
	    flag {
		all {
		    disable: false
		}
	    }
	}
*/
	
	area 0.0.0.0 {

/*
	    virtual-link 20.20.20.20 {
		transit-area: 0.0.0.1
	    }
*/

/*
	    area-range: 20:20:20:20::/64 {
		advertise: true
	    }
*/

	    interface dco0 {
		/* link-type: "broadcast" */
		vif dc0 {
		    address 10:10:10:10:10:10:10:10 {
			disable: false
		    }
		    /* priority: 128 */
		    /* hello-interval: 10 */
		    /* router-dead-interval: 40 */
		    /* interface-cost: 1 */
		    /* retransmit-interval: 5 */
		    /* transit-delay: 1 */

		    /* passive: false */

		    /* disable: false */			
		}
	    }
	}

	area 0.0.0.1 {
	    /* area-type: "normal" */	

	    interface dc1 {
		vif dc1 {
		    address 20:20:20:20:20:20:20:20 {
		    }
		}
	    }
	}

/*
	area 0.0.0.2 {
	    area-type: "stub"

	    default-lsa {
		metric: 0
	    }

	    summaries {
		disable: false
	    }
	
	    interface dc2 {
		vif dc2 {
		    address 30:30:30:30:30:30:30:30 {
		    }
		}
	    }
	}
*/

/*
	area 0.0.0.3 {
	    area-type: "nssa"

	    default-lsa {
		metric: 0
	    }

	    summaries {
		disable: true
	    }
	
	    interface dc3 {
		vif dc3 {
		    address fe80::1 {
		    }
		}
	    }
	}
*/

    }
}

protocols {
    bgp {
	bgp-id: 10.10.10.10
	local-as: 65002

	/* export: "static" */

/*
	traceoptions {
	    flag {
		verbose
		message-in
		message-out
		state-change
		policy-configuration
	    }
	}
*/

/*
	route-reflector {
	    cluster-id: 20.20.20.20
	}
*/	

/*
	confederation {
	    cluster-id: 65005
	}
*/	

	peer 10.30.30.30 {
	    local-ip: 10.10.10.10
	    as: 65000
	    next-hop: 10.10.10.20

	    /* Route reflector client */
	    /* client: false */
	    /* confederation-member: false */

/*
	    local-port: 179
	    peer-port: 179
*/
	    /* holdtime: 120 */
	    /* disable: false */

	    /* Optionally enable other AFI/SAFI combinations */
	    /* ipv4-multicast: true */

	    /* ipv6-unicast: true */
	    /* ipv6-multicast: true */
	}

	/* Originate IPv4 Routes */
/*
	network4 10.10.10.0/24 {
	    next-hop: 10.10.10.10
	    unicast: true
	    multicast: true
	}
*/

	/* Originate IPv6 Routes */
/*
	network6 10:10:10:10::/64 {
	    next-hop: 10:10:10:10:10:10:10:10
	    unicast: true
	    multicast: true
	}
*/
    }
}

plumbing {
    mfea4 {
	disable: false
	interface dc0 {
	    vif dc0 {
		disable: false
	    }
	}
	interface register_vif {
	    vif register_vif {
		/* Note: this vif should be always enabled */
		disable: false
	    }
	}
	traceoptions {
	    flag all {
		disable: false
	    }
	}
    }

/*
    mfea6 {
	disable: false
	interface dc0 {
	    vif dc0 {
		disable: false
	    }
	}
	interface register_vif {
	    vif register_vif {
		disable: false
	    }
	}
	traceoptions {
	    flag all {
		disable: false
	    }
	}
    }
*/
}

protocols {
    igmp {
	disable: false
	interface dc0 {
	    vif dc0 {
		disable: false
		/* version: 2 */
		/* enable-ip-router-alert-option-check: false */
		/* query-interval: 125 */
		/* query-last-member-interval: 1 */
		/* query-response-interval: 10 */
		/* robust-count: 2 */
	    }
	}
	traceoptions {
	    flag all {
		disable: false
	    }
	}
    }
/*
    mld {
	disable: false
	interface dc0 {
	    vif dc0 {
		disable: false
		version: 1
		enable-ip-router-alert-option-check: false
		query-interval: 125
		query-last-member-interval: 1
		query-response-interval: 10
		robust-count: 2
	    }
	}
	traceoptions {
	    flag all {
		disable: false
	    }
	}
    }
*/
}

protocols {
    pimsm4 {
	disable: false
	interface dc0 {
	    vif dc0 {
		disable: false
		/* enable-ip-router-alert-option-check: false */
		/* dr-priority: 1 */
		/* hello-period: 30 */
		/* hello-triggered-delay: 5 */
		/* alternative-subnet 10.40.0.0/16 */
	    }
	}
	interface register_vif {
	    vif register_vif {
		/* Note: this vif should be always enabled */
		disable: false
	    }
	}

	static-rps {
	    rp 10.60.0.1 {
		group-prefix 224.0.0.0/4 {
		    /* rp-priority: 192 */
		    /* hash-mask-len: 30 */
		}
	    }
	}

	bootstrap {
	    disable: false
	    cand-bsr {
		scope-zone 224.0.0.0/4 {
		    /* is-scope-zone: false */
		    cand-bsr-by-vif-name: "dc0"
		    /* cand-bsr-by-vif-addr: 10.10.10.10 */
		    /* bsr-priority: 1 */
		    /* hash-mask-len: 30 */
		}
	    }

	    cand-rp {
		group-prefix 224.0.0.0/4 {
		    /* is-scope-zone: false */
		    cand-rp-by-vif-name: "dc0"
		    /* cand-rp-by-vif-addr: 10.10.10.10 */
		    /* rp-priority: 192 */
		    /* rp-holdtime: 150 */
		}
	    }
	}

	switch-to-spt-threshold {
	    /* approx. 1K bytes/s (10Kbps) threshold */
	    disable: false
	    interval: 100
	    bytes: 102400
	}

	traceoptions {
	    flag all {
		disable: false
	    }
	}
    }

/*
    pimsm6 {
	disable: false
	interface dc0 {
	    vif dc0 {
		disable: false
		enable-ip-router-alert-option-check: false
		dr-priority: 1
		hello-period: 30
		hello-triggered-delay: 5
		alternative-subnet 40:40:40:40::/64
	    }
	}
	interface register_vif {
	    vif register_vif {
		disable: false
	    }
	}

	static-rps {
	    rp 50:50:50:50:50:50:50:50 {
		group-prefix ff00::/8 {
		    rp-priority: 192
		    hash-mask-len: 126
		}
	    }
	}

	bootstrap {
	    disable: false
	    cand-bsr {
		scope-zone ff00::/8 {
		    is-scope-zone: false
		    cand-bsr-by-vif-name: "dc0"
		    cand-bsr-by-vif-addr: 10:10:10:10:10:10:10:10
		    bsr-priority: 1
		    hash-mask-len: 126
		}
	    }

	    cand-rp {
		group-prefix ff00::/8 {
		    is-scope-zone: false
		    cand-rp-by-vif-name: "dc0"
		    cand-rp-by-vif-addr: 10:10:10:10:10:10:10:10
		    rp-priority: 192
		    rp-holdtime: 150
		}
	    }
	}

	switch-to-spt-threshold {
	    disable: false
	    interval: 100
	    bytes: 102400
	}

	traceoptions {
	    flag all {
		disable: false
	    }
	}
    }
*/
}

/*
 * Note: fib2mrib is needed for multicast only if the unicast protocols
 * don't populate the MRIB with multicast-specific routes.
 */
protocols {
    fib2mrib {
	disable: false
    }
}



/*
 * See xorp/mibs/snmpdscripts/README on how to configure Net-SNMP in your host
 * before uncommenting the snmp section below.
 * Also check that the "bgp4_mib_1657.so" exists in the correct location.
 */

/*
protocols {
    snmp {
	mib-module bgp4_mib_1657 {
	    abs-path: "/usr/local/xorp/mibs/bgp4_mib_1657.so"
	}
    }
}
*/
